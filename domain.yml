version: "2.0"

intents:
  - greet
  - goodbye
  - affirm
  - deny
  - mood_great
  - mood_unhappy
  - bot_challenge
###########
  - about_python
  - python_uses
  - why_python
  - define_variable_in_python
  - data_types

  - python_strings
  - python_list
  - python_tuples
  - python_set
  - python_dict

  - get_senderid

responses:
  utter_greet:
  - text: "Hey! How are you?"

  utter_cheer_up:
  - text: "Here is something to cheer you up:"
    image: "https://i.imgur.com/nGF1K8f.jpg"

  utter_did_that_help:
  - text: "Did that help you?"

  utter_happy:
  - text: "Great, carry on!"

  utter_goodbye:
  - text: "Bye"

  utter_iamabot:
  - text: "I am a snakebot"

###############
  utter_about_python:
  - text: |
      - Python is a programming language.
      - Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.

  utter_python_uses:
  - text: |
      - web development (server-side)
      - software development
      - artificial intelligence
      - system scripting
      - web scraping

  utter_why_python:
  - text: |
      - Python works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc).
      - Python has a simple syntax similar like English language.
      - Python has syntax that allows developers to write programs with fewer lines than some other programming languages.
      - Python can be treated in a procedural way, an object-oriented way or a functional way.
      - Python runs on an interpreter system, meaning that code can be executed as soon as it is written. This means that prototyping can be very quick.

  utter_define_variable_in_python:
  - text: |
      - Python has no command for declaring a variable.
      - A variable is created the moment you first assign a value to it
      - e.g : x = 7
      - e.g : y = "Ronaldo"

  utter_data_types:
  - text: |
      - Numeric type: int, float, complex
      - Text type: str
      - Sequence type: list, tuple, range
      - Mapping type:	dict
      - Set type:	set, frozenset
      - boolean type:	bool

  utter_python_strings:
  - text: |
      - Strings in python are surrounded by either single quotation marks, or double quotation marks.
      - ex - x = "hello"
      - ex - y = 'hello world'

  utter_python_list:
  - text: |
      - Lists are used to store multiple items in a single variable.
      - Lists are created using square brackets
      - List items are ordered, changeable, and allow duplicate values.
      - List items are indexed, the first item has index [0], the second item has index [1] etc.
      - The list is changeable, meaning that we can change, add, and remove items in a list after it has been created.
      - Since lists are indexed, lists can have items with the same value:
      - x = ["vw", "honda", "nissan"]
      - y = ["vw", 2, 11, ['gtr']]

  utter_python_tuples:
  - text: |
      - Tuples are used to store multiple items in a single variable.
      - A tuple is a collection which is ordered and unchangeable
      - Tuples are written with round brackets.
      - Tuple items are ordered, unchangeable, and allow duplicate values.
      - x = ("vw", "honda", "nissan")
      - y = ("vw", 2, 11, ['gtr'])
  
  utter_python_set:
  - text: |
      - Sets are used to store multiple items in a single variable
      - A set is a collection which is unordered, unchangeable*, and unindexed.
      - Sets cannot have two items with the same value.
      - Sets are written with curly brackets.
      - x = {"vw", "honda", "nissan"}
      - y = {"vw", 2, 11, ['gtr']}

  utter_python_dict:
  - text: |
      - Dictionaries are used to store data values in key:value pairs.
      - A dictionary is a collection which is ordered*, changeable and do not allow duplicates.
      - Dictionary items are unordered, changeable, and does not allow duplicates.
      - Dictionaries are changeable, meaning that we can change, add or remove items after the dictionary has been created.
      - thisdict = {"brandname": "vw","car": "Mustang","year": 1964}


actions:
  - action_get_senderid
  - write_conversation_to_db    

session_config:
  session_expiration_time: 60
  carry_over_slots_to_new_session: true
